import random
import string

# –§—É–Ω–∫—Ü–∏—è —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏—è (—à–∏—Ñ—Ä –¶–µ–∑–∞—Ä—è)
def caesar_cipher(text, shift):
    encrypted_text = ""
    for char in text:
        if char.isalpha():
            shift_base = 65 if char.isupper() else 97
            encrypted_char = chr((ord(char) - shift_base + shift) % 26 + shift_base)
            encrypted_text += encrypted_char
        else:
            encrypted_text += char
    return encrypted_text

# –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –ª–∏—Ü–µ–Ω–∑–∏–æ–Ω–Ω–æ–≥–æ –∫–ª—é—á–∞
def generate_license_key():
    joke = "shot_in_foot"  # –®—É—Ç–∫–∞
    encrypted_joke = caesar_cipher(joke, 3)  # –ó–∞—à–∏—Ñ—Ä–æ–≤–∫–∞ —à—É—Ç–∫–∏

    # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–ª—É—á–∞–π–Ω—ã—Ö —á–∞—Å—Ç–µ–π –∫–ª—é—á–∞
    part1 = ''.join(random.choices(string.ascii_uppercase + string.digits, k=4))
    part2 = encrypted_joke[:4] + random.choice(string.ascii_uppercase)  # –í—Å—Ç–∞–≤–∫–∞ —á–∞—Å—Ç–∏ —à—É—Ç–∫–∏
    part3 = ''.join(random.choices(string.ascii_uppercase + string.digits, k=4))

    # –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–ª—é—á–∞
    license_key = f"{part1}-{part2}-{part3}"

    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω–æ–π —Å—É–º–º—ã
    checksum = sum(ord(c) for c in license_key) % 10
    license_key += str(checksum)

    return license_key

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–∏—Ü–µ–Ω–∑–∏–æ–Ω–Ω–æ–≥–æ –∫–ª—é—á–∞
def check_license_key(key):
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω–æ–π —Å—É–º–º—ã
    if not key[:-1].replace("-", "").isalnum() or len(key) != 15:
        return False

    expected_checksum = sum(ord(c) for c in key[:-1]) % 10
    if int(key[-1]) != expected_checksum:
        return False

    # –†–∞—Å—à–∏—Ñ—Ä–æ–≤–∫–∞ —à—É—Ç–∫–∏
    encrypted_joke = key[5:9]  # –ß–∞—Å—Ç—å —à—É—Ç–∫–∏ –∏–∑ –∫–ª—é—á–∞
    decrypted_joke = caesar_cipher(encrypted_joke, -3)  # –†–∞—Å—à–∏—Ñ—Ä–æ–≤–∫–∞ —à—É—Ç–∫–∏

    if decrypted_joke == "shot":  # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å —à—É—Ç–∫–∏
        print("–®—É—Ç–∫–∞: –í—ã—Å—Ç—Ä–µ–ª –≤ –Ω–æ–≥—É!")
        return True
    return False

# –û—Å–Ω–æ–≤–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞
def main():
    license_key = generate_license_key()
    print(f"–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ª–∏—Ü–µ–Ω–∑–∏–æ–Ω–Ω—ã–π –∫–ª—é—á: {license_key}")

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–ª—é—á–∞ (–º–æ–∂–Ω–æ –≤–≤–æ–¥–∏—Ç—å –∫–ª—é—á –≤—Ä—É—á–Ω—É—é)
    user_input = input("–í–≤–µ–¥–∏—Ç–µ –ª–∏—Ü–µ–Ω–∑–∏–æ–Ω–Ω—ã–π –∫–ª—é—á –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏: ")
    if check_license_key(user_input):
        print("–ö–ª—é—á –≤–µ—Ä–Ω—ã–π! üéâ")
        # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –≤—ã–≤–æ–¥ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–ª–æ–Ω–∏–∫–∞
    else:
        print("–ù–µ–≤–µ—Ä–Ω—ã–π –∫–ª—é—á. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")

if __name__ == "__main__":
    main()
